{"version":3,"sources":["FreeOffer.js","SignInSide.js","LeadCapturePage.js","reportWebVitals.js","index.js"],"names":["FreeOffer","url","this","props","freeOfferUrl","window","location","replace","React","Component","useStyles","createStyles","theme","root","height","image","backgroundRepeat","paddingTop","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","SignInSide","firebase","apps","length","initializeApp","firebaseConfig","analytics","db","firestore","redirect","bind","target","productname","history","push","e","preventDefault","email","value","name","doc","console","log","collection","firestoreCollection","set","then","catch","error","classes","Grid","container","component","className","CssBaseline","item","xs","sm","md","style","backgroundImage","productImageUrl","Paper","elevation","square","Typography","variant","title","onSubmit","submitForm","TextField","required","fullWidth","id","label","autoComplete","autoFocus","Button","color","submitButtonText","withRouter","withStyles","LeadCapturePage","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e5208f8.chunk.js","sourcesContent":["import React from 'react';\n\nclass FreeOffer extends React.Component {\n    componentDidMount() {\n        const url = this.props.freeOfferUrl;\n        window.location.replace(url)\n    }\n\n    render() {\n        return (<div></div>);\n    }\n}\n\nexport default FreeOffer;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundRepeat: 'no-repeat',\n    paddingTop: \"20%\",\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nclass SignInSide extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize Firebase\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp(this.props.firebaseConfig);\n      firebase.analytics();\n    }\n\n    this.db = firebase.firestore();\n\n    this.redirect = this.redirect.bind(this);\n  }\n\n  redirect() {\n    const target = `/${this.props.productname}`;\n    this.props.history.push(target); // <--- The page you want to redirect your user to.\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const name = e.target.name.value;\n    const doc = email;\n    console.log(name, email, doc);\n\n    this.db.collection(this.props.firestoreCollection).doc(doc).set({\n      name: name,\n      email: email\n    })\n      .then(this.redirect)\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid container component=\"main\" className={classes.root}>\n          <CssBaseline />\n          <Grid item xs={false} sm={4} md={7}\n            style={{ backgroundImage: `url(${this.props.productImageUrl})` }}\n            className={classes.image} />\n          <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n            <div className={classes.paper}>\n              <Typography component=\"h1\" variant=\"h6\">\n                {this.props.title}\n              </Typography>\n              <form className={classes.form} onSubmit={this.submitForm.bind(this)}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Full Name\"\n                  name=\"name\"\n                  autoComplete=\"full name\"\n                  autoFocus\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  {this.props.submitButtonText}\n                </Button>\n              </form>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(SignInSide));","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport FreeOffer from './FreeOffer';\nimport SignInSide from './SignInSide';\n\nclass LeadCapturePage extends React.Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <SignInSide\n                                title={this.props.title}\n                                productname={this.props.productname}\n                                firebaseConfig={this.props.firebaseConfig}\n                                firestoreCollection={this.props.firestoreCollection}\n                                productImageUrl={this.props.productImageUrl}\n                                submitButtonText={this.props.submitButtonText} />\n                        </Route>\n                        <Route path={`/${this.props.productname}`}>\n                            <FreeOffer\n                                freeOfferUrl={this.props.freeOfferUrl} />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n\n        );\n    }\n}\n\nexport default LeadCapturePage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LeadCapturePage from './LeadCapturePage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LeadCapturePage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}